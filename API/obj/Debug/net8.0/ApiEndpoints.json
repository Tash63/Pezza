[
  {
    "ContainingType": "Api.Controllers.ToppingController",
    "Method": "Get",
    "RelativePath": "{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.ApplicationUserController",
    "Method": "DeleteApplicationUser",
    "RelativePath": "ApplicationUser/{email}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.ApplicationUserController",
    "Method": "Get",
    "RelativePath": "ApplicationUser/{Email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.ApplicationUserController",
    "Method": "Search",
    "RelativePath": "ApplicationUser/Search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "Common.Models.ApplicationUser.SearchApplicationUserModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Models.ListResult\u00601[[Common.Models.ApplicationUser.ApplicationUserModel, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Common.Models.ErrorResult",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.ApplicationUserController",
    "Method": "UpdateApplicationUser",
    "RelativePath": "ApplicationUser/Update/{email}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Common.Models.ApplicationUser.UpdateApplicationUserModel",
        "IsRequired": true
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.CartController",
    "Method": "AddItem",
    "RelativePath": "Cart",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Common.Models.Cart.AddToCartModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Cart.Command.AddToCart",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.CartController",
    "Method": "RemoveItem",
    "RelativePath": "Cart/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Cart.Command.RemoveFromCart",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.CartController",
    "Method": "CustomerCart",
    "RelativePath": "Cart/CustomerCart/{UserEmail}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserEmail",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Customer.Queries.GetCartQuery",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__1\u00601[[Common.Entities.ApplicationUser, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__1_3",
    "RelativePath": "confirmEmail",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "code",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "changedEmail",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "EndpointName": "MapIdentityApi-/confirmEmail"
  },
  {
    "ContainingType": "Api.Controllers.CustomerController",
    "Method": "Get",
    "RelativePath": "Customer/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.CustomerController",
    "Method": "DeleteCustomer",
    "RelativePath": "Customer/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.CustomerController",
    "Method": "GetOrders",
    "RelativePath": "Customer/{id}/Orders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Models.ListResult\u00601[[Common.Models.Order.OrderModel, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Common.Models.ErrorResult",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Common.Models.ErrorResult",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.CustomerController",
    "Method": "CreateCustomer",
    "RelativePath": "Customer/Add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Common.Models.Customer.CreateCustomerModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.CustomerController",
    "Method": "Search",
    "RelativePath": "Customer/Search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "Common.Models.Customer.SearchCustomerModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Models.ListResult\u00601[[Common.Models.Customer.CustomerModel, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Common.Models.ErrorResult",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.CustomerController",
    "Method": "UpdateCustomer",
    "RelativePath": "Customer/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Common.Models.Customer.UpdateCustomerModel",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__DisplayClass1_0\u00601[[Common.Entities.ApplicationUser, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__6",
    "RelativePath": "forgotPassword",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resetRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.ForgotPasswordRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__1\u00601[[Common.Entities.ApplicationUser, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__1_1",
    "RelativePath": "login",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "login",
        "Type": "Microsoft.AspNetCore.Identity.Data.LoginRequest",
        "IsRequired": false
      },
      {
        "Name": "useCookies",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "useSessionCookies",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Authentication.BearerToken.AccessTokenResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__1\u00601[[Common.Entities.ApplicationUser, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__1_8",
    "RelativePath": "manage/2fa",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tfaRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.TwoFactorRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Identity.Data.TwoFactorResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__1\u00601[[Common.Entities.ApplicationUser, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__1_9",
    "RelativePath": "manage/info",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Identity.Data.InfoResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__DisplayClass1_0\u00601[[Common.Entities.ApplicationUser, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__10",
    "RelativePath": "manage/info",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "infoRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.InfoRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Identity.Data.InfoResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.OrderController",
    "Method": "Create",
    "RelativePath": "Order/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Models.Order.CreateOrderModel",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.OrderController",
    "Method": "Search",
    "RelativePath": "Order/Search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Common.Models.Order.SearchOrderModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Order.Queries.SearchOrdersQuery",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.OrderController",
    "Method": "Update",
    "RelativePath": "Order/Update/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Common.Models.OrderModel.UpdateOrderModel",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Core.Order.Commands.UpdateOrderCommand",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.PizzaController",
    "Method": "Create",
    "RelativePath": "Pizza",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Common.Models.Pizza.CreatePizzaModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Entities.Pizza",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.PizzaController",
    "Method": "Get",
    "RelativePath": "Pizza/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.PizzaController",
    "Method": "Delete",
    "RelativePath": "Pizza/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.PizzaController",
    "Method": "Update",
    "RelativePath": "Pizza/{Pizzaid}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Common.Models.Pizza.UpdatePizzaModel",
        "IsRequired": true
      },
      {
        "Name": "Pizzaid",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.PizzaController",
    "Method": "Search",
    "RelativePath": "Pizza/Search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "Common.Models.Pizza.SearchPizzaModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Models.ListResult\u00601[[Common.Models.Customer.CustomerModel, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Common.Models.ErrorResult",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__DisplayClass1_0\u00601[[Common.Entities.ApplicationUser, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__2",
    "RelativePath": "refresh",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "refreshRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.RefreshRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Authentication.BearerToken.AccessTokenResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__DisplayClass1_0\u00601[[Common.Entities.ApplicationUser, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__0",
    "RelativePath": "register",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registration",
        "Type": "Microsoft.AspNetCore.Identity.Data.RegisterRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__DisplayClass1_0\u00601[[Common.Entities.ApplicationUser, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__5",
    "RelativePath": "resendConfirmationEmail",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resendRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.ResendConfirmationEmailRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Microsoft.AspNetCore.Routing.IdentityApiEndpointRouteBuilderExtensions\u002B\u003C\u003Ec__1\u00601[[Common.Entities.ApplicationUser, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "\u003CMapIdentityApi\u003Eb__1_7",
    "RelativePath": "resetPassword",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resetRequest",
        "Type": "Microsoft.AspNetCore.Identity.Data.ResetPasswordRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Http.HttpValidationProblemDetails",
        "MediaTypes": [
          "application/problem\u002Bjson"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.SideController",
    "Method": "Get",
    "RelativePath": "Side/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.SideController",
    "Method": "remove",
    "RelativePath": "Side/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.SideController",
    "Method": "Add",
    "RelativePath": "Side/Add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "Common.Models.Side.CreateSideModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.SideController",
    "Method": "Search",
    "RelativePath": "Side/Search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "Common.Models.Side.SearchSideModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Models.ListResult\u00601[[Common.Models.Side.SideModel, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Common.Models.ErrorResult",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.SideController",
    "Method": "Update",
    "RelativePath": "Side/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "Common.Models.Side.UpdateSideModel",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.ToppingController",
    "Method": "Create",
    "RelativePath": "Topping",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Common.Models.Topping.CreateToppingModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Models.Topping.CreateToppingModel",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.ToppingController",
    "Method": "Delete",
    "RelativePath": "Topping/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.ToppingController",
    "Method": "Search",
    "RelativePath": "Topping/Search",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "Common.Models.Topping.SearchToppingModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Common.Models.ListResult\u00601[[Common.Models.Topping.ToppingModel, Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Common.Models.ErrorResult",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "Api.Controllers.ToppingController",
    "Method": "Update",
    "RelativePath": "Topping/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Common.Models.Topping.UpdateToppingModel",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      }
    ]
  }
]